name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  security-events: write
  checks: write
  pull-requests: write

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=4 -Dorg.gradle.parallel=true -Dorg.gradle.caching=true -Dkotlin.incremental=false

jobs:
  # Fast parallel jobs that don't need setup
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  # Combined job for speed - lint + build + test
  build-and-test:
    name: Build, Lint & Unit Tests
    runs-on: ubuntu-latest
    outputs:
      apk-path: ${{ steps.build.outputs.apk-path }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
          cache-read-only: false
            
      - name: Make gradlew executable
        run: chmod +x ./gradlew
        
      - name: Warm up Gradle and download dependencies
        run: ./gradlew dependencies --no-daemon
        
      - name: Run lint, tests, and build in parallel
        id: build
        run: |
          # Run lint and unit tests in parallel, then build
          ./gradlew lintDebug testDebugUnitTest assembleDebug --parallel --build-cache
          echo "apk-path=app/build/outputs/apk/debug/*.apk" >> $GITHUB_OUTPUT
        
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            app/build/test-results/testDebugUnitTest/TEST-*.xml
            app/build/test-results/testReleaseUnitTest/TEST-*.xml
          check_name: Unit Test Results
          comment_mode: create new
          
      - name: Report Android Lint Results
        uses: yutailang0119/action-android-lint@v1
        if: always()
        with:
          xml_path: app/build/reports/lint-results-debug.xml
          
      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/*.apk
          retention-days: 7

  instrumented-tests:
    name: Instrumented Tests
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
          cache-read-only: true
          
      - name: Make gradlew executable
        run: chmod +x ./gradlew
        
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-35-${{ runner.os }}-v2
          restore-keys: |
            avd-35-${{ runner.os }}-
            avd-35-
            
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 35
          target: google_apis
          arch: x86_64
          ram-size: 4096M
          heap-size: 512M
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -memory 4096
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
          
      - name: Run instrumented tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 35
          target: google_apis
          arch: x86_64
          ram-size: 4096M
          heap-size: 512M
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -memory 4096
          disable-animations: true
          script: ./gradlew connectedDebugAndroidTest --parallel --build-cache --no-daemon
          
      - name: Upload instrumented test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: instrumented-test-reports
          path: app/build/reports/androidTests/
          retention-days: 7
